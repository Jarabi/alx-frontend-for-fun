/* sort strings */
@import '103-sort_list';

$default-order: a b c d e f g h i j k l m n o p q r s t u v w x y z !default;

@function _compare($first, $second, $order) {
	$first: to-lower-case($first + unquote(""));
	$second: to-lower-case($second + unquote(""));

	@for $index from 1 through min(str-length($first), str-length($second)) {
		$first-char: str-slice($first, $index, $index);
		$second-char: str-slice($second, $index, $index);

		@if $first-char and $second-char and index($order, $first-char) != index($order, $second-char) {
			@return index($order, $first-char) < index($order, $second-char);
		}
	}

	@return str-length($first) < str-length($second);
}

@function quick-sort($list, $order: $default-order) {
	$less: ();
	$equal: ();
	$large: ();

	@if length($list) > 1 {
		$seed: nth($list, ceil(length($list) /2));

		@each $item in $list {
			@if $item == $seed {
				$equal: append($equal, $item, list-separator($list));
			} @else if _compare($item, $seed, $order) {
				$less: append($less, $item, list-separator($list));
			} @else if not _compare($item, $seed, $order) {
				$large: append($large, $item, list-separator($list));
			}
		}

		@return join(join(quick-sort($less, $order), $equal), quick-sort($large, $order));
	}

	@return $list;
}

$sorted-list: quick-sort($list_to_sort, $default-order);

@debug "#{$sorted-list}";
